/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 16.04.2 ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Definitions
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
cross(a,b) :=  [a[2]*b[3] - a[3]*b[2],
                a[3]*b[1] - a[1]*b[3],
                a[1]*b[2] - a[2]*b[1]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
div(a) := diff(a[1],x) + diff(a[2],y) + diff(a[3],z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
curl(a) := [diff(a[3],y) - diff(a[2],z), 
              diff(a[1],z) - diff(a[3],x), 
              diff(a[2],x) - diff(a[1],y)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Transform E_sph to cartesian coordinats
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
E_sph: [2*p*cos(theta)/(4*%pi*epsilon_0*r^3), p*sin(theta)/(4*%pi*epsilon_0*r^3), 0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
transform unit vectors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
e_r:     [sin(theta)*cos(phi), sin(theta)*sin(phi), cos(theta)];
e_theta: [cos(theta)*cos(phi), cos(theta)*sin(phi), -sin(theta)];
e_phi:   [-sin(phi), cos(phi), 0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
transform coordinates
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r: sqrt(x^2+y^2+z^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
theta: acos(z/r);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
phi: atan2(y,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E_cart: E_sph[1]*e_r + E_sph[2]*e_theta + 0*e_phi;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E: ev(E_cart);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E: factor(E);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Compute vector spin connections (full eq. set)
   [wxMaxima: section end   ] */

/* [wxMaxima: subsect start ]
omega_0 = m c^2/(2pi hbar c^2)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
omega_0: m*c^2/(2*%pi*h[bar]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[A_x, A_y, A_z]: -E/omega_0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Divergence and curl of A
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(div([A_x,A_y,A_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
cA: factor(ratsimp(curl([A_x,A_y,A_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Compute omega
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E10a: diff(A_z,y)+diff(A_y,z) = omega_y*A_z + omega_z*A_y;
E10b: diff(A_x,z)+diff(A_z,x) = omega_z*A_x + omega_x*A_z;
E10c: diff(A_y,x)+diff(A_x,y) = omega_x*A_y + omega_y*A_x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(solve([E10a,E10b,E10c],[omega_x, omega_y, omega_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Divergence and curl of omega
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Om: [rhs(first(first(%))), rhs(second(first(%))), rhs(third(first(%)))];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(div(Om)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratsimp(curl(Om));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
B = curl(A) - omega x A
and div B, curl B
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
B: factor(cA - cross(Om, [A_x, A_y, A_z]));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
div(B);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(curl(B));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
omega_0=-c/r*cos(theta)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
omega_0: -c/r*cos(theta);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[A_x, A_y, A_z]: -E/omega_0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Divergence and curl of A
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(div([A_x,A_y,A_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
cA: factor(ratsimp(curl([A_x,A_y,A_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E10a: diff(A_z,y)+diff(A_y,z) = omega_y*A_z + omega_z*A_y;
E10b: diff(A_x,z)+diff(A_z,x) = omega_z*A_x + omega_x*A_z;
E10c: diff(A_y,x)+diff(A_x,y) = omega_x*A_y + omega_y*A_x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(solve([E10a,E10b,E10c],[omega_x, omega_y, omega_z])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Divergence and curl of omega
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Om: [rhs(first(first(%))), rhs(second(first(%))), rhs(third(first(%)))];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(ratsimp(div(Om)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratsimp(curl(Om));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
B = curl(A) - omega x A
and div B, curl B
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
B: factor(cA - cross(Om, [A_x, A_y, A_z]));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
div(B);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(curl(B));
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
