/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 16.04.2 ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Definitions
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
cross(a,b) :=  [a[2]*b[3] - a[3]*b[2],
                a[3]*b[1] - a[1]*b[3],
                a[1]*b[2] - a[2]*b[1]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr: [dX, dY, dZ];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Components of Eq.(14)
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
dr_nabla1(psi) := dX*diff(psi,X) + dY*diff(psi,Y) + dZ*diff(psi,Z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr_nabla2(psi) := (block [fh], fh: dr_nabla1(psi),
    dX*diff(fh,X) + dY*diff(fh,Y) + dZ*diff(fh,Z)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr_nabla3(psi) := (block [fh], fh: dr_nabla2(psi),
    dX*diff(fh,X) + dY*diff(fh,Y) + dZ*diff(fh,Z)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr_nabla4(psi) := (block [fh], fh: dr_nabla3(psi),
    dX*diff(fh,X) + dY*diff(fh,Y) + dZ*diff(fh,Z)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr_nabla5(psi) := (block [fh], fh: dr_nabla4(psi),
    dX*diff(fh,X) + dY*diff(fh,Y) + dZ*diff(fh,Z)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr_nabla6(psi) := (block [fh], fh: dr_nabla5(psi),
    dX*diff(fh,X) + dY*diff(fh,Y) + dZ*diff(fh,Z)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Averaging functions
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
/* Function for averaging delta r terms in an expression */
averageMZ(f, dr) := 
block([arglist, s0, den, i, j, res, l, el],
/* make list of all summands in the formula */
arglist: [],
s0: string(0),
arglist: args(expand(f)),
/* check if dr[i] appears in any denominator */
for j:1 thru length(arglist) do (
    den: denom(arglist[j]),
    /*print ("DEN:", den),*/
    for i:1 thru length(dr) do (
        if not freeof(dr[i],den) then print(i, "Denominator error!")
)),
/* remove all list elements containing occurences of dr[i], dr[i]^3, dr[i]^5 */ 
for j:1 thru length(arglist) do (
    for i:1 thru length(dr) do (
        if not equal(string(coeff(arglist[j], dr[i], 1)), s0) 
        or not equal(string(coeff(arglist[j], dr[i], 3)), s0) 
        or not equal(string(coeff(arglist[j], dr[i], 5)), s0) 
        then
            arglist[j]: 0
            /*print("L(", dr[i], ") ", arglist[j])*/
)),
res: 0,
/* construct result expression */
l: length(arglist),
for j:1 thru l do (
    el: pop(arglist),
    res: res + el
    /*print(j,el,res)*/
),
res
/*print(res)*/
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* Function for replacing deltaX^2 etc. to delta r^2 terms 
    in cartesian coordinates */
replaceR(f,dri) := 
    block([f1, i, dr, len],
    f1: f,
    len: length(dri),
    for i:1 thru len do (
        f1: ratsubst(1/len*dR[av]^2, dri[i]^2, f1)
    ),
    factorsum(f1)
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Gravitational and Coulomb force
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
r: [X, Y, Z];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dr: [dX, dY, dZ];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
r2: r.r;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
U: -X/(r2)^(3/2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
DF, 2nd order
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
DU2: 1/2!*dr_nabla2(U)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f1: ratsimp(averageMZ(DU2, dr));
f2: DU2Rav: replaceR(f1,dr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
DF, 4th order
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
DU4: 1/4!*dr_nabla4(U)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f1: ratsimp(averageMZ(DU4, dr))$
f2: DU4Rav: replaceR(f1,dr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
DF, 6th order
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
DU6: 1/6!*dr_nabla6(U)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f1: ratsimp(averageMZ(DU6, dr))$
f2: DU6Rav: replaceR(f1,dr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Computation of gravitational fluctuations
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
FX: U;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E69: FX*(1-3/2*v^2/c^2+3/8*v^4/c^4+1/16*v^6/c^6) = DU4Rav+DU6Rav;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(E69, dR[av]^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Plots Gravitational force
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
assume(X>0,Y>0,Z>0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
UX: ev(U, [Y=0, Z=0]);
DU2X: ev(DU2Rav/dR[av]^2*dra^2, [dra=.2, Y=0, Z=0]);
DU4X: ev(DU4Rav/dR[av]^4*dra^4, [dra=.2, Y=0, Z=0]);
DU6X: ev(DU6Rav/dR[av]^6*dra^6, [dra=.2, Y=0, Z=0]);
Utot: UX+DU2X+DU4X+DU6X;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([UX,DU4X,DU6X], [X,0,1], [y,-40,20],
[legend, "FX","D4FX", "D6FX"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
plot2d([UX,DU4X,DU6X], [X,0,1], [y,-40,20],
[legend, "FX", "D4FX", "D6FX"],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper397/Fig7.png"])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([UX,Utot], [X,0,1], [y,-70,10],
[legend, "FX", "F_{tot}"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
plot2d([UX,Utot], [X,0,1], [y,-70,10],
[legend, "FX", "F_{tot}"],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper397/Fig8.png"])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Plots fluctuation delta_r
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
assume(X>0,Y>0,Z>0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
UX: ev(U, [Y=0, Z=0]);
DU2X: 0;
DU4X: ev(rhs(first(E4a)), [Y=0, Z=0, v=1, c=1]);
DU6X: ev(rhs(first(E6a)), [Y=0, Z=0, v=1, c=1]);
Utot: UX+DU2X+DU4X+DU6X;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([UX,DU2X,DU4X,DU6X], [X,0,2], [y,-4,4],
[legend, "FX", "D2FX", "D4FX", "D6FX"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*plot2d([UX,DU2X,DU4X,DU6X], [X,0,1], [y,-40,20],
[legend, "FX", "D2FX", "D4FX", "D6FX"],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper397/Fig9.png"])$*/;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([UX,Utot], [X,0,1], [y,-70,10],
[legend, "FX", "F_{tot}"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*plot2d([UX,Utot], [X,0,1], [y,-70,10],
[legend, "FX", "F_{tot}"],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper397/Fig10.png"])$*/;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
