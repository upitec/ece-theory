/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 17.10.1 ] */
/* [wxMaxima: section start ]
Coordinates
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
depends([phi,r,omega,T,U,L],t,Phi,r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Kinetic energy
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
T: 1/2*m*(diff(r,t)^2+r^2*diff(phi+omega[1]*t,t)^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Potential energy
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
Phi: -M*G/r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Ustd: m*Phi;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrangian
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
La: T-Ustd;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Etot: T+Ustd;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrange equations
   [wxMaxima: section end   ] */


/* [wxMaxima: subsect start ]
Definitions
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
D1(La,q) := diff(La, q)/*+Q[q]*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D2a(La,q) := diff(La, diff(q,t));/*only for constants of motion*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D2(La,q) := diff(diff(La, diff(q,t)),t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
LE(La,q) := D1(La,q) = D2(La,q);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Evaluation
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
E11: LE(La,phi);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
E21: LE(La,r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Constants of motion
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
D2a(La, phi);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Resolving for highest derivatives of variables
and final equations
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
GC: trigsimp(first(solve([E11,E21], 
    [diff(phi,t,2), diff(r,t,2)])));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Reformulating 2nd equation with spin connection
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
GC2a: factor(expand(GC[2]+G*M/r^2-r*diff(phi,t)^2));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
GC2b: 'Omega[r]*'Phi= rhs(GC2a);
GC2c: 'Omega[r]*Phi= rhs(GC2a);
GC2d: first(factor(solve(GC2c, 'Omega[r])));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Compare with eq.(4)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
GC2e: 'Omega[r] = -r^2/(M*G)*(omega[1]+t*diff(omega[1],t))*
(+omega[1]+t*diff(omega[1],t)+2*diff(phi,t));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ratsimp(GC2d-GC2e);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrange equation solver (Eqs. in Hamilton form)
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
transform(Eq) := (A: ratsubst(phi_d, diff(phi,t), Eq),
    A: ratsubst(phi_dd, diff(phi,t,2), A),
    A: ratsubst(r_d, diff(r,t), A),
    A: ratsubst(r_dd, diff(r,t,2), A)
)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
G1: transform(GC[1]);
G2: transform(GC[2]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Solution
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
/*om[1]: 0.00+0.0075/(3.5*t+1.);*/
om[1]: 0;
om[1]: -0.035*exp(-.025*t);
om[1]: -0.35/(0.2*t+1);
om[1]: -0.035*t;
om[1]: -0.25*exp(-.015*t);
om[1]: 0.035*t;
dom[1]: diff(om[1],t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
str: [m=1, G=1, M=10, omega[1]=om[1] /*, diff(omega[1],t)=dom[1]*/ ];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Equation solver
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
Eq1: (ev(rhs(G1), str, diff));
Eq2: (ev(rhs(G2), str, diff));
Eq3: phi_d /*phi_dot;*/;
Eq4: r_d /*r_dot;*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Initial values and torques

   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
phi_0: 0;
r_0: 1;
phi_d0: 3.9;/*3.9*/
r_d0: 0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
s: rk([Eq1, Eq2, Eq3, Eq4], 
    [phi_d, r_d, phi, r], 
    [phi_d0, r_d0, phi_0, r_0], 
   [t,0,60,0.04])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Graphics
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
c1: makelist([p[1],p[2]],p,s)$
c2: makelist([p[1],p[3]],p,s)$
c3: makelist([p[1],p[4]],p,s)$
c4: makelist([p[1],p[5]],p,s)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot phi, r
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, c1], [discrete, c2]], /*[y,-10,12],*/
[xlabel, "time"],
[legend, "omega=phi_{dot}", "r_{dot}"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, c3], [discrete, c4]], [y,0, 20],
[xlabel, "time"],
[legend, "phi", "r"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([[discrete, c3], [discrete, c4]],
[xlabel, "time"],
[legend, "phi/10", "Z"],
[gnuplot_preamble, "unset yzeroaxis;"],
[gnuplot_term, "png linewidth 2.5 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/20-Gyroscope/Fig10.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot space curve of centre of mass
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transf() := ( 
    block([i,t,r,phi,x,y,z],
    cl1: [],
    cl2: [],
    for i:1 thru length(c1) step 1 do (
        [t,phi,r]: [c1[i][1],c3[i][2],c4[i][2]],
        x: r*cos(phi),
        y: r*sin(phi),
        z: 0,      
        cl1: append(cl1, [[x,y,z]]),
        cl2: append(cl2, [[x,y]])
    )))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transf()$
cr1: points(cl1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d(user_preamble="set grid polar; set size square; ",
    xrange=[-3.5,3.5], yrange=[-3.5,3.5],
    line_width=2, points_joined = true, point_size=0, cr1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
draw2d(user_preamble="set grid polar; set size square; 
    set terminal png linewidth 1.5 font 'Arial' 16 size 800,600;
    set output 'D:/Doc/Artikel-Eck/ECE-Theorie/Paper413/Fig8.png'",
    xrange=[-3.5,3.5], yrange=[-3.5,3.5],
    line_width=2, points_joined = true, point_size=0, cr1)$

/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*wxplot2d([discrete, cl2],[x,-2,-0], [y,0.5,2],
    [gnuplot_preamble,"set grid polar; "]
     )$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot angular momentum
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transfc() := ( 
    block([i,t1,r,phi,r_d,phi_d,x,y,z,m,L,L_N,om1,dom1,m1],
    cl1: [],cl2: [],
    m1: ev(m,str),
    om1: subst(t1,t,om[1]), 
    dom1: subst(t1,t,dom[1]), 
    print(om1,dom1),
    for i:1 thru length(c1) step 4 do (
        [t1,phi,r,phi_d,r_d]: [c1[i][1],
            c3[i][2],c4[i][2],
            c1[i][2],c2[i][2]],
        L_N: m1*r^2*phi_d,
        cl1: append(cl1, [[t1,L_N]]),
        L: m1*r^2*(phi_d+ev(om1)+ev(dom1)*t1),
        /*L: m1*r^2*(phi_d+ev(om1)+ev(dom1)*t1),*/
        /*L: m1*r^2*(phi_d-ev(om1)-ev(dom1)*t1)
            -2*m1^2*r*(ev(dom1)*t1+ev(om1)),*/
        cl2: append(cl2, [[t1,L]])
)))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transfc()$
/*cr1: points(cl1)$
cr2: points(cl2)$*/
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl1],[discrete, cl2]],/*[y,0,6],*/
[legend, "L(Newton)", "L"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl1], [discrete, cl2]],
[xlabel, "time"],
[legend, "L(Newton)", "L"],
[gnuplot_term, "png linewidth 3 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper413/Fig9.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot spin connection
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transfsc() := ( 
    block([i,t1,r,phi,r_d,phi_d,x,y,z,m,L,L_N,om1,dom1,O_r,m1,M1,G1],
    cl1: [],cl2: [],
    [m1, M1, G1]: [ev(m,str), ev(M,str), ev(G,str)],  
    om1: subst(t1,t,om[1]), 
    dom1: subst(t1,t,dom[1]), 
        print(om1,dom1),
    for i:1 thru length(c1) step 4 do (
        [t1,phi,r,phi_d,r_d]: [c1[i][1],
            c3[i][2],c4[i][2],
            c1[i][2],c2[i][2]],
        O_r: -r^2/(M1*G1)*(ev(om1)+t1*ev(dom1))*(ev(om1)+t1*ev(dom1)-2*phi_d),
        cl1: append(cl1, [[t1,O_r]])
)))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transfsc()$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl1]],/*[y,0,6],*/
[legend, "Omega_r"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl1]],
[xlabel, "time"],
[legend, "Omega_r"],
[gnuplot_term, "png linewidth 3 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper413/Fig10.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([om[1],dom[1]],[t,0,32],/*[y,0,6],*/
[legend, "omega_1", "d(omega_1)/dt"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Interpolate orbit parameters
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
cx1: []$ ia:0$ kill(rm, phim, Tm)$
Tm[0]: 0$
load(interpol)$ kill(g);
for i:2 thru length(c1)-1 step 1 do (
    block([t,phi,phid,r,r1,r2,x,y,E1,E2,E3,c,alpha,T1,phi1,p],
        [t,phi,r]: [c1[i][1],c3[i][2],c4[i][2]],
        r1[1]: c4[i-1][2],
        r1[2]: c4[i  ][2],
        r1[3]: c4[i+1][2],
        phi1[1]: c3[i-1][2],
        phi1[2]: c3[i  ][2],
        phi1[3]: c3[i+1][2],
        T1[1]: c4[i-1][1],
        T1[2]: c4[i  ][1],
        T1[3]: c4[i+1][1],
        phid: mod(phi*180./%pi, 360),
        if (r1[2]) > (r1[1]) and (r1[2]) > (r1[3]) then (
            print("---"),
            print("r_max: ",r1[2], "phi°: ", phid, "t: ",t, "i: ",i),
            x: r*cos(phi),
            y: r*sin(phi),
            cx1: append(cx1, [[x,y]]),
       /*if (r1[2]) < (r1[1]) and (r1[2]) < (r1[3]) then
            print("r_min: ",r1[2], "phi°: ", phid, "t: ",t)*/
/* interpolate phi and r*/
/* parabola coefficients of c[1]*alpha[i]^2+c[2]*alpha[i]+c[3] = r1[i] */
            alpha[1]: c3[i-1][2],
            alpha[2]: c3[i][2],
            alpha[3]: c3[i+1][2],
            kill(c),
            E1: c[1]*alpha[1]^2+c[2]*alpha[1]+c[3] = r1[1],
            E2: c[1]*alpha[2]^2+c[2]*alpha[2]+c[3] = r1[2],
            E3: c[1]*alpha[3]^2+c[2]*alpha[3]+c[3] = r1[3],
            print("phi[1,2,3]: ",alpha[1],alpha[2],alpha[3]),
            s: solve([E1,E2,E3], [c[1],c[2],c[3]]),
            print(s),
            c[1]: rhs(first(first(s))),
            c[2]: rhs(second(first(s))),
            c[3]: rhs(third(first(s))),
            /* interpolate angle of maximum */
            alpha[0]: -c[2]/(2*c[1]),
            ia: ia+1,
            phim[ia]: alpha[0],
            rm[ia]: c[1]*alpha[0]^2+c[2]*alpha[0]+c[3],
            print("phim[",ia,"]: ",phim[ia],"=",mod(phim[ia]*180/%pi,360),"°"),
            print("rm[",ia,"]: ",rm[ia]),
/* interpolate Tm */
            p:[[phi1[1],T1[1]], [phi1[2],T1[2]], [phi1[3],T1[3]]],
            g: ratinterpol(p,2),
            Tm[ia]: ev(g,[x=phim[ia]]),
            print("Tm[",ia,"]: ",Tm[ia],"Delta_Tm[",ia,"]: ",Tm[ia]-Tm[ia-1])
))),numer$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*printf(true, "   r_max     phi_max   delta_phi_max°  Delta_T~%")$*/
printf(true, "   r_max      Delta_T~%")$
for i:2 thru ia do (
    D_phim: mod((phim[i]-phim[i-1])*180/%pi, 360),
    /*printf(true, "~10,6f ~10,6f ~10,6f ~10,6f~%", rm[i], phim[i], D_phim, Tm[i]-Tm[i-1])*/
    printf(true, "~10,6f ~10,6f~%", rm[i], Tm[i]-Tm[i-1])
), numer;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot auxiliary parameters
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transfaux() := ( 
    block([i,t1,r,phi,r_d,phi_d,x,y,z,m,L,L_N,om1,dom1,O_r,m1,M1,G1],
    cl1: [],cl2: [], cl3: [], cl4: [],
    [m1, M1, G1]: [ev(m,str), ev(M,str), ev(G,str)],  
    om1: subst(t1,t,om[1]), 
    dom1: subst(t1,t,dom[1]), 
        print(om1,dom1),
    for i:1 thru length(c1) step 4 do (
        [t1,phi,r,phi_d,r_d]: [c1[i][1],
            c3[i][2],c4[i][2],
            c1[i][2],c2[i][2]],
        L: (phi_d+ev(om1)+ev(dom1)*t1),
        cl1: append(cl1, [[t1,L]]),
        cl2: append(cl2, [[t1,ev(om1)]]),
        cl3: append(cl3, [[t1,t1*ev(dom1)]]),
        cl4: append(cl4, [[t1,phi_d]])
)))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transfaux()$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl1],[discrete, cl2],[discrete, cl3],[discrete, cl4]],/*[y,0,6],*/
[legend, "sum", "om_1", "t*dom_1/dt", "omega"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl1],[discrete, cl2],[discrete, cl3],[discrete, cl4]],/*[y,0,6],*/
[xlabel, "time"],
[legend, "sum", "om_1", "t*dom_1/dt", "omega"],
[gnuplot_term, "png linewidth 3 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper413/Fig11.png"])$
/* [wxMaxima: input   end   ] */



/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
