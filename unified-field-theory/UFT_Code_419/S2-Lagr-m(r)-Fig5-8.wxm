/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 17.10.1 ] */
/* [wxMaxima: title   start ]
S2 star
Relativistic Lagrangian with m(r)
   [wxMaxima: title   end   ] */


/* [wxMaxima: section start ]
Coordinates
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
depends([phi,r,omega,T,U,L,gamma],t,[Phi],r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
assume(c>0, Gamma>0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrange equations
   [wxMaxima: section end   ] */


/* [wxMaxima: subsect start ]
Definitions
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
D1(La,q) := diff(La, q)/*+Q[q]*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D2a(La,q) := diff(La, diff(q,t));/*only for constants of motion*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
D2(La,q) := diff(diff(La, diff(q,t)),t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
LE(La,q) := D1(La,q) = D2(La,q);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
kill(gamma,v2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Rel. counterpart of kinetic part
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
T: -m*c^2/gamma;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
v2: (diff(r,t)^2+r^2*diff(phi,t)^2)/m(r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
gamma: 1/sqrt(m(r)-v2/c^2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Potential energy
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
Phi: -sqrt(m(r))*M*G/r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Ustd: m*Phi;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrangian
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
La: ev(T)-Ustd;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Etot: T+Ustd;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Evaluation
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
E11: LE(La,phi);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
E21: LE(La,r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Replacing dm(r)/dt
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
E11: ratsubst(diff(m(r),r)*diff(r,t), diff(m(r),t), E11);
E21: ratsubst(diff(m(r),r)*diff(r,t), diff(m(r),t), E21);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Constants of motion
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
D2a(La, phi);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Resolving for highest derivatives of variables
and final equations
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
GC: trigsimp(first(solve([E11/gamma^2,E21/gamma^2], 
    [diff(phi,t,2), diff(r,t,2)])));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Re-inserting gamma
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
GC1: ratsubst(c^2/Gamma^2, c^2/gamma^2,GC)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
GC2: expand(GC1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Lagrange equation solver (Eqs. in Hamilton form)
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
transform(Eq) := (A: ratsubst(phi_d, diff(phi,t), Eq),
    A: ratsubst(phi_dd, diff(phi,t,2), A),
    A: ratsubst(r_d, diff(r,t), A),
    A: ratsubst(r_dd, diff(r,t,2), A)
)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
m1(r):=0.9877;
m1(r):=1-2*M*G/(c^2*r)-alpha/r^2;
m1(r):=2-exp(log(2)*exp(-r/R));
m1(r):=1-0.0005*exp(log(2)*exp(-r/R))+0.0005;
m1(r):=1-0.0001*exp(log(2)*exp(-r/R))+0.0001;
rmin:1.7952e13; rmax:1.451e14*(1+0.88466); 
/*m1(r):= ev((1-0.9877)/(rmax-rmin)*(r-rmin)+0.9877);
m1(r):= ev((1-(2-0.9877))/(rmax)*(r)+2-0.9877);
m1(r):=1-0.0005*exp(1*log(2)*exp(-r/R));*/
m1(r):=1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
dm1: diff(m1(r),r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
G1: transform(ev(GC2[1]))$
G2: transform(ev(GC2[2]))$
gamma1: transform(ev(gamma));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Solution
   [wxMaxima: section end   ] */


/* [wxMaxima: input   start ] */
/*om[1]: 0.00+0.0075/(3.5*t+1.);
om[1]: -0.035*exp(-.025*t);
om[1]: -0.35/(0.2*t+1);
om[1]: 0.055*t^2;
om[1]: -0.035*t;
om[1]: -0.25*exp(-.015*t);
om[1]: 0;
dom[1]: diff(om[1],t);*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*str: [m=1, G=1, M=10, c=20, omega[1]=om[1], R=.1, alpha=1 ];*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*str: [m=14*1.98855e30, a=1.4253e14, epsilon=0.8831, M=7.956*10^36, G=6.67384e-11, c=2.99792458e8];*/
str: [alpha=-2.25e23, R=10*1.7952e13, 
    m=14*1.98855e30, a=1.451e14, M=8.3627*10^36, G=6.67408e-11, c=2.99792458e8];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
m(r):=ev(m1(r),str);
dm: ev(dm1, str);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
m(rmin), numer;
m(rmax), numer;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Gamma: ev(gamma1,str);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*wxplot2d([m(r)], [r,rmin,rmax], [y,0.9999,1.0],
[grid2d,true], [legend, "m(r)"], [ylabel, ""])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([m(r)], [r,rmin,rmax], [y,0.9999,1.0],
[grid2d,true], [legend, "m(r)"], [ylabel, ""],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig10.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Equation solver
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
Eq1: (ev(rhs(G1), str, diff))$
Eq2: (ev(rhs(G2), str, diff))$
Eq3: phi_d /*phi_dot;*/;
Eq4: r_d /*r_dot;*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Initial values
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
r_0: 1.7952e13;
v_0: 7.650e6;
phi_d0: v_0/r_0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
kill(phi_d, r_d, phi, r);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
s: rk([Eq1, Eq2, Eq3, Eq4], 
    [phi_d, r_d, phi, r], [phi_d0, 0, 0, r_0], 
    [t,0,12.e8,1.e5])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Graphics
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
tfac: 1/3.15576e7$
c1: makelist([p[1]*tfac,p[2]],p,s)$
c2: makelist([p[1]*tfac,p[3]],p,s)$
c3: makelist([p[1]*tfac,p[4]],p,s)$
c4: makelist([p[1]*tfac,p[5]],p,s)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot phi, r
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, c1], [discrete, c2]], /*[y,-10,12],*/
[xlabel, "time"],
[legend, "phi_{dot}", "r_{dot}"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, c3], [discrete, c4]], /*[y,-1, 20],*/
[xlabel, "time"],
[legend, "phi", "r"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([[discrete, c3], [discrete, c4]],
[xlabel, "time"],
[legend, "phi/10", "Z"],
[gnuplot_preamble, "unset yzeroaxis;"],
[gnuplot_term, "png linewidth 2.5 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/20-Gyroscope/Fig10.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot space curve of centre of mass
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transf() := ( 
    block([i,t,r,phi,x,y,z],
    cl1: [], cl2: [],
    for i:1 thru length(c1) step 4 do (
        [t,phi_d,r_d,phi,r]: 
            [c1[i][1],c1[i][2],c2[i][2],c3[i][2],c4[i][2]],
        x: r*cos(phi),
        y: r*sin(phi),
        z: 0,      
        cl1: append(cl1, [[x,y]]),
        x: x/sqrt(m(r)),
        y: y/sqrt(m(r)),
        cl2: append(cl2, [[x,y]])
    )))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transf()$
cr1: points(cl1)$
cr2: points(cl2)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxdraw2d(user_preamble="set grid polar; set size square; ",
    xrange=[-3.e14,4.e13], yrange=[-18.e13,18.e13],
    line_width=2, points_joined = true, point_size=0, cr1)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl1]],
    [x,-24.e13*1.4,4.e13*1.4], [y,-14.e13,14.e13],
    [gnuplot_preamble,"set grid polar; "],
    [legend, "r orbit", "r_1 orbit"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
3
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl1]], 
    [x,-24.e13*1.4,4.e13*1.4], [y,-14.e13,14.e13],
    [gnuplot_preamble,"set grid polar; "],
    [legend, "r orbit"],[xlabel, "x [m]"], [ylabel, "y [m]"], 
    [gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
    [gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig5.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: subsect start ]
Plot angular momentum, gamma and Etot
   [wxMaxima: subsect end   ] */


/* [wxMaxima: input   start ] */
transfc() := ( 
    block([i,t1,r,phi,r_d,phi_d,x,y,z,m,L,L_N,om1,dom1,m1,
            cc1,gamma,E,E_N,M1,G1,v1,v1m,rm,Fvac],
    cl1: [], cl2: [], cl3: [], cl4: [], 
        cl5: [], cl6: [],cl7: [], cl8: [], cl9: [], cl10: [],
    m1: ev(m,str),
    cc1: ev(c,str),
    M1: ev(M,str),
    G1: ev(G,str),
    om1: subst(t1,t,om[1]), 
    dom1: subst(t1,t,dom[1]), 
    /*print(om1,dom1),*/
    for i:1 thru length(c1) step 4 do (
        [t1,phi,r,phi_d,r_d]: [c1[i][1],
            c3[i][2],c4[i][2],
            c1[i][2],c2[i][2]],
            /* Newtonian L */
        L_N: m1*r^2*phi_d,
        cl1: append(cl1, [[t1,L_N]]),
            /* gamma*/
        gamma: ev(Gamma),
        cl3: append(cl3, [[t1,gamma]]),
            /* relativistic L */
        L: gamma/ev(m(r))*m1*r^2*phi_d,
        /*L: m1*r^2*(phi_d+ev(om1)+ev(dom1)*t1)/sqrt(1-(r_d^2+r^2*phi_d^2)/cc1^2),*/
        /*L: m1*r^2*(phi_d+ev(om1)+ev(dom1)*t1),*/
        /*L: m1*r^2*(phi_d-ev(om1)-ev(dom1)*t1)
            -2*m1^2*r*(ev(dom1)*t1+ev(om1)),*/
        cl2: append(cl2, [[t1,L]]),
            /* Total anergy */
        E: m1*cc1^2*(ev(m(r))*gamma-1)-sqrt(ev(m(r)))*m1*M1*G1/r,
        cl4: append(cl4, [[t1,E]]),
        E_N: 1/2*m1*(r_d^2+r^2*phi_d^2)-m1*M1*G1/r,
        cl5: append(cl5, [[t1,E_N]]),
            /* v */
        v1: sqrt(r_d^2+r^2*phi_d^2),
        cl6: append(cl6, [[t1,v1]]),
        v1m: v1/sqrt(m(r)),
        cl7: append(cl7, [[t1,v1m]]),
        cl8: append(cl8, [[t1,r]]),
        rm: r/sqrt(m(r)),
        cl9: append(cl9, [[t1,rm]]),
        Fvac : (gamma*cc1^2*m1*m(r)^(3/2)*ev(dm))
            /(r*ev(dm)-2*m(r)),
        cl10: append(cl10, [[r,Fvac]])
)))$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transfc()$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl3]],
[legend, "gamma"], [xlabel, "time"], [ylabel, ""])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl3]/*,[discrete, cl6]*/], /*[y,0,50],*/
[legend, "gamma", "v"], [xlabel, "time [y]"], [ylabel, ""],
   [gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
   [gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig6.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*wxplot2d([[discrete, cl8],[discrete, cl9]], 
[legend, "r", "r_1"], [xlabel, "time"], [ylabel, ""])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([[discrete, cl8],[discrete, cl9]], 
[legend, "r", "r_1"], [xlabel, "time"], [ylabel, ""],
  [gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
  [gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig3.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl6],[discrete, cl7]], 
[legend, "v", "v_1"], [xlabel, "time"], [ylabel, ""])$;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([[discrete, cl6],[discrete, cl7]], 
[legend, "v", "v_1"], [xlabel, "time"], [ylabel, ""],
  [gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
  [gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig4.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl1],[discrete, cl2]],
[legend, "L(Newton)", "L(rel.)"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl1], [discrete, cl2]],
[xlabel, "time [y]"],
[legend,"L(Newton)", "L(rel.)"],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig7.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
wxplot2d([[discrete, cl5], [discrete, cl4]],
[legend, "E(Newton)", "E(rel.)"], [xlabel, "time"], [ylabel, ""])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
plot2d([[discrete, cl5], [discrete, cl4]], 
[legend, "E(Newton)", "E(rel.)"], [xlabel, "time [y]"], [ylabel, ""],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig8.png"])$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*wxplot2d([[discrete, cl10]], /*[y,-5000,500],
[legend, "F(vac)(r)"], [xlabel, "r"], [ylabel, ""])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*plot2d([[discrete, cl10]],
[legend, "F(vac)(r)"], [xlabel, "r"], [ylabel, ""],
[gnuplot_term, "png linewidth 2 font 'Arial' 16 size 800,600"],
[gnuplot_out_file, "D:/Doc/Artikel-Eck/ECE-Theorie/Paper419/Fig15.png"])$*/;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: section start ]
Extract orbit parameters
   [wxMaxima: section end   ] */


/* [wxMaxima: comment start ]
Transform c1-c4 to cartesian coordinates
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
block([t,r,phi,r_d,phi_d,x,y,x_d,y_d],
    for i:1 thru length(c1) step 1 do (
        [t,phi_d,r_d,phi,r]: [c1[i][1],c1[i][2],c2[i][2],c3[i][2],c4[i][2]],
        /*if (i<4) then print(t,phi_d,r_d,phi,r),*/
        c1[i][2]: r_d*cos(phi)-r*phi_d*sin(phi), 
        c2[i][2]: r_d*sin(phi)+r*phi_d*cos(phi),
        c3[i][2]: r*cos(phi), 
        c4[i][2]: r*sin(phi)
));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Extraction of x_min,max, y_min,max, epsilon
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
x_min: x_max: y_min: y_max: eps_1: eps_2: 0$
for i:2 thru length(c1)-1 step 1 do (
    block([t,r,phi,r_d,phi_d,x,y,x_d,y_d,z,m,L,gam],
        [t,x,y]: [c1[i][1],c3[i][2],c4[i][2]],
        x[1]: c3[i-1][2],
        x[2]: c3[i][2],
        x[3]: c3[i+1][2],
        if (x[2]) > (x[1]) and (x[2]) > (x[3]) then (
            print("x_max: ",x[1],x[2],x[3]),
            print("t: ",t),
            x_max: x[2]
        ),
        if (x[2]) < (x[1]) and (x[2]) < (x[3]) then (
            print("x_min: ",x[1],x[2],x[3]),
            print("t: ",t),
           x_min: x[2]    
        ),
        y[1]: c4[i-1][2],
        y[2]: c4[i][2],
        y[3]: c4[i+1][2],
        if (y[2]) > (y[1]) and (y[2]) > (y[3]) then (
            print("y_max: ",y[1],y[2],y[3]),
            y_max: y[2],
            if abs(x_min)>0 and abs(x_max)>0 then (
            eps_1: sqrt(1-y_max^2/(((abs(x_min)+abs(x_max))/2)^2)),
            print("eps_1: ",eps_1)  
            )),
        if (y[2]) < (y[1]) and (y[2]) < (y[3]) then (
            print("y_min: ",y[1],y[2],y[3]),
            y_min: y[2],
            if abs(x_min)>0 and abs(x_max)>0 then (
            eps_2: sqrt(1-y_min^2/(((abs(x_min)+abs(x_max))/2)^2)),
            print("eps_{1,2,av.}: ",eps_1, eps_2, (eps_1+eps_2)/2) 
            ))
));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Extraction of r_min, _rmax and T
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
for i:2 thru length(c1)-1 step 1 do (
    block([t,r,r2,x,y,x_d,y_d,z,m,L,gam],
        [t,x,y]: [c1[i][1],c3[i][2],c4[i][2]],
        r2[1]: c3[i-1][2]^2 + c4[i-1][2]^2,
        r2[2]: c3[i  ][2]^2 + c4[i  ][2]^2,
        r2[3]: c3[i+1][2]^2 + c4[i+1][2]^2,
        if (r2[2]) > (r2[1]) and (r2[2]) > (r2[3]) then
            print("r_max: ",sqrt(r2[2]), "t: ",t),
        if (r2[2]) < (r2[1]) and (r2[2]) < (r2[3]) then
            print("r_min: ",sqrt(r2[2]), "t: ",t)
));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Interpolation of orbital period (data from multiple runs to be inserted)
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
y2: 8.3786; y1: 8.3736; x2: 15.35; x1:15.57; x0: 16.05;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
E: (y2-y1)/(x2-x1)=(y0-y1)/(x0-x1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
solve(E, y0), numer;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Calculate/interpolate maximum of radius
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
ia: 0$
for i:2 thru length(c1)-1 step 1 do (
    block([t,r,x,y,x_d,y_d,z,m,L,alpha,alph,E1,E2,E3,s,c],
        numer:true,
        [t,x,y]: [c1[i][1],c3[i][2],c4[i][2]],
        x[1]: c3[i-1][2],
        x[2]: c3[i][2],
        x[3]: c3[i+1][2],
        y[1]: c4[i-1][2],
        y[2]: c4[i][2],
        y[3]: c4[i+1][2],
        r[1]: sqrt(x[1]^2+y[1]^2),
        r[2]: sqrt(x[2]^2+y[2]^2),
        r[3]: sqrt(x[3]^2+y[3]^2),
        if (r[2]) > (r[1]) and (r[2]) > (r[3]) then (
            print("i: ",i),
            print("r_max: ",r[1],r[2],r[3]),
            print("x: ",x[1],x[2],x[3]),
            print("y: ",y[1],y[2],y[3]),
        /* interpolate */
            /* parabola coefficients of c[1]*alpha[i]^2+c[2]*alpha[i]+c[3] = r[i] */
            alpha[1]: atan(y[1]/x[1]),
            alpha[2]: atan(y[2]/x[2]),
            alpha[3]: atan(y[3]/x[3]),
            kill(c),
            E1: c[1]*alpha[1]^2+c[2]*alpha[1]+c[3] = r[1],
            E2: c[1]*alpha[2]^2+c[2]*alpha[2]+c[3] = r[2],
            E3: c[1]*alpha[3]^2+c[2]*alpha[3]+c[3] = r[3],
            print("alpha[1,2,3]: ",alpha[1],alpha[2],alpha[3]),
            s: solve([E1,E2,E3], [c[1],c[2],c[3]]),
            print(s),
            c[1]: rhs(first(first(s))),
            c[2]: rhs(second(first(s))),
            c[3]: rhs(third(first(s))),
            /*print("c[1,2,3]: ",c[1],c[2],c[3]),*/
            /* interpolated angle of maximum */
            alpha[0]: -c[2]/(2*c[1]),
            ia: ia+1,
            alph[ia]: alpha[0],
            print("alpha[0]: ",alpha[0],"=",alpha[0]*180/%pi,"°")
)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Delta phi in radians and degrees
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
alph[0]: 0$
for i:1 thru ia do (
    print("alpha, delta_phi1,2: ",alph[i], alph[i]-alph[i-1],
        (alph[i]-alph[i-1])*180/%pi, "°")
);
/* [wxMaxima: input   end   ] */



/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
